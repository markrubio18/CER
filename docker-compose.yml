version: '3.8'

services:
  ca-management:
    build: .
    ports:
      - "3000:3000"
    env_file:
      - env.docker
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: >
      sh -c "
        echo '‚è≥ Waiting for PostgreSQL to be ready...' &&
        until pg_isready -h postgres -U $POSTGRES_USER -d $POSTGRES_DB; do
          echo 'PostgreSQL is unavailable - sleeping' &&
          sleep 2
        done &&
        echo '‚úÖ PostgreSQL is ready!' &&
        echo 'üîß Generating Prisma client...' &&
        npx prisma generate &&
        echo 'üìä Pushing database schema...' &&
        npx prisma db push &&
        echo '‚úÖ Database initialized! Starting application...' &&
        npx tsx server.ts
      "

  postgres:
    image: postgres:14-alpine
    env_file:
      - env.docker
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  logs:
    driver: local
